//This code basically prints prime number upto n.
//This code uses prime sieve method which directly checks from i^2 elements for a number to be prime.
//COmplexity = O(nlognlogn)
//better than O(sqrt(n)) which checks for prime upto sqrt(n)


#include <iostream>
using namespace std;

void primeSieve(int *p){
    //first  marking all the odd nos as prime
    for(int j=3;j<=1000; j +=2 ){
        p[j] = 1;
    }
    
    //Sieve
    for(int i = 3; i<=1000;i+=2){
        //if the current nummber is not marked then it is prime
        if(p[i] == 1){
            //mark all the multiples of i as not prime
            for(int j = i*i; j<=1000;j+=i){
                p[j] = 0;
            }
        }
    }
    p[2] = 1;
    p[1] = p[0] = 0;
}

int main()
{
    int n;
    int p[1000005] = {0};
    cin>>n;
    primeSieve(p);
    
    for(int i=0;i<=n;i++){
        if(p[i] == 1)
        cout<<i<<" ";
    }

    return 0;
}
